<#include "/macro.include"/>
<#assign className = table.className>   
<#assign classNameFirstLower = table.classNameFirstLower>   
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<#macro mapperEl value>${r"#{"}${value}}</#macro>

<!-- namespace必须指向Dao接口 -->
<mapper namespace="${basepackage}.dao.${appModule}.${className}Dao">
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="${appModule}-${className}-columns">
	    <![CDATA[
		<#list table.columns as column>`${column.sqlName}` as `${column.columnNameFirstLower}`<#if column_has_next>, </#if></#list>
	    ]]>
	</sql>	

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="save" useGeneratedKeys="true" keyProperty="${table.idColumn.columnNameFirstLower}">
    <![CDATA[
        INSERT INTO ${table.sqlName} (
        <#list table.columns as column>`${column.sqlName}`<#if column_has_next>, </#if></#list>
        ) VALUES (
        <#list table.columns as column><@mapperEl column.columnNameFirstLower/><#if column_has_next>, </#if></#list>        
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update">
    <![CDATA[
        UPDATE ${table.sqlName} SET
	        <#list table.notPkColumns as column>`${column.sqlName}` = <@mapperEl column.columnNameFirstLower/> <#if column_has_next>,</#if> </#list>
        WHERE 
        	<#list table.compositeIdColumns as column>${column.sqlName} = <@mapperEl column.columnNameLower/> <#if column_has_next> AND </#if> </#list>	        
    ]]>
	</update>

    <delete id="deleteById">
    <![CDATA[
        DELETE FROM ${table.sqlName} WHERE
        <#list table.compositeIdColumns as column>
        `${column.sqlName}` = <@mapperEl 'id'/> <#if column_has_next> AND </#if>
		</#list>
    ]]>
    </delete>
    
    <select id="getById" resultType="${className}">
		SELECT <include refid="${appModule}-${className}-columns" />
	    <![CDATA[
		    FROM ${table.sqlName} 
	        WHERE 
				<#list table.compositeIdColumns as column>
		        `${column.sqlName}` = <@mapperEl 'id'/> <#if column_has_next> AND </#if>
		        </#list>    
	    ]]>
	</select>
	
	<sql id="${className}-where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <#list table.columns as column>
	       <#if column.isDateTimeColumn>
	       <if test="${column.columnNameFirstLower}Begin != null">
				AND `${column.sqlName}` >= <@mapperEl column.columnNameFirstLower+"Begin"/>
		   </if>
		   <if test="${column.columnNameFirstLower}End != null">
				AND `${column.sqlName}` &lt;= <@mapperEl column.columnNameFirstLower+"End"/>
		   </if>
	       <#else>
	       <if test="${column.columnNameFirstLower}">
				AND `${column.sqlName}` = <@mapperEl column.columnNameFirstLower/>
			</if>
	       </#if>
	       </#list>			
		</where>
	</sql>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM ${table.sqlName} 
		<include refid="${className}-where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultType="${className}">
		SELECT <include refid="${appModule}-${className}-columns" /> FROM (
			SELECT *
			FROM ${table.sqlName} 
			<include refid="${className}-where"/>
			
			<if test="sortColumns != null">
				ORDER BY <@jspEl 'sortColumns'/>
			</if>
		) a limit <@mapperEl 'offset' />, <@mapperEl 'pageSize' />
    </select>
	
	<select id="list" resultType="${className}">
    	SELECT <include refid="${appModule}-${className}-columns" />
	    FROM ${table.sqlName} 
		<include refid="${className}-where"/>
		
		<if test="sortColumns != null">
			ORDER BY <@jspEl 'sortColumns'/>
		</if>
    </select>

    <#list table.columns as column>
    <#if column.unique && !column.pk>
    <select id="getBy${column.columnName}" resultType="${className}" parameterType="${column.javaType}">
	    SELECT <include refid="${appModule}-${className}-columns"/>
	    FROM ${table.sqlName} where ${column.sqlName} = <@mapperEl column.columnNameLower/>
    </select>
    
    </#if>
	</#list>
	
</mapper>

