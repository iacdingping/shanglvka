<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.slk.core.dao.mp.WeixinUserDao">
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="mp-User-columns">
	    <![CDATA[
		`id` as `id`, `identification` as `identification`, `platform_code` as `platformCode`, `type` as `type`, `create_date` as `createDate`, `update_date` as `updateDate`, `del_flag` as `delFlag`, `queried` as `queried`,
		`nickname` as `nickname`, `sex`, `province`, `city`, `phone`, `is_staff` as `isStaff`
	    ]]>
	</sql>	

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="save" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO mp_user (
        `id`, `identification`, `platform_code`, `type`, `create_date`, `update_date`, `del_flag`, `queried`, `nickname`, `sex`, `province`, `city`, `phone`, `is_staff`
        ) VALUES (
        #{id}, #{identification}, #{platformCode}, #{type}, #{createDate}, #{updateDate}, #{delFlag}, #{queried},  #{nickname}, #{sex}, #{province}, #{city}, #{phone}, #{isStaff}
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update">
    <![CDATA[
        UPDATE mp_user SET
	        `identification` = #{identification} , `platform_code` = #{platformCode} , `type` = #{type} , `create_date` = #{createDate} , `update_date` = #{updateDate} , `del_flag` = #{delFlag}, `queried` = #{queried},
	        `nickname` = #{nickname}, `sex` = #{sex}, `province` = #{province}, `city` = #{city}, `phone` = #{phone}, `is_staff` = #{isStaff}
        WHERE 
        	id = #{id}  	        
    ]]>
	</update>

	<update id="cancelAttentionUser">
    <![CDATA[
        UPDATE mp_user SET
	        `type` = 2 , `update_date` = now()
        WHERE 
        	`platform_code` = #{fromUserName}
    ]]>
	</update>

    <delete id="deleteById">
    <![CDATA[
        DELETE FROM mp_user WHERE
        `id` = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultType="WeixinUser">
		SELECT <include refid="mp-User-columns" />
	    <![CDATA[
		    FROM mp_user 
	        WHERE 
		        `id` = #{id} 
	    ]]>
	</select>
	
	<sql id="User-where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="id">
				AND `id` = #{id}
			</if>
	       <if test="identification">
				AND `identification` = #{identification}
			</if>
	       <if test="platformCode">
				AND `platform_code` = #{platformCode}
			</if>
	       <if test="type">
				AND `type` = #{type}
			</if>
	       <if test="createDateBegin != null">
				AND `create_date` >= #{createDateBegin}
		   </if>
		   <if test="createDateEnd != null">
				AND `create_date` &lt;= #{createDateEnd}
		   </if>
	       <if test="updateDateBegin != null">
				AND `update_date` >= #{updateDateBegin}
		   </if>
		   <if test="updateDateEnd != null">
				AND `update_date` &lt;= #{updateDateEnd}
		   </if>
	       <if test="delFlag">
				AND `del_flag` = #{delFlag}
			</if>
	       <if test="queried != null">
				AND `queried` = #{queried}
			</if>
			<if test="nickname">
				AND `nickname` = #{nickname}
			</if>
			<if test="sex">
				AND `sex` = #{sex}
			</if>
			<if test="province">
				AND `province` = #{province}
			</if>
			<if test="city">
				AND `city` = #{city}
			</if>
			<if test="phone">
				AND `phone` = #{phone}
			</if>
			<if test="isStaff">
				AND `is_staff` = #{isStaff}
			</if>
		</where>
	</sql>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM mp_user 
		<include refid="User-where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultType="WeixinUser">
		SELECT <include refid="mp-User-columns" /> FROM (
			SELECT *
			FROM mp_user 
			<include refid="User-where"/>
			
			<if test="sortColumns != null">
				ORDER BY ${sortColumns}
			</if>
		) a limit #{offset}, #{pageSize}
    </select>
	
	<select id="list" resultType="WeixinUser">
    	SELECT <include refid="mp-User-columns" />
	    FROM mp_user 
		<include refid="User-where"/>
		
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>

</mapper>

