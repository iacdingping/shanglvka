<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.slk.core.dao.mp.KeywordDao">
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="mp-Keyword-columns">
	    <![CDATA[
		`id` as `id`, `key` as `key`, `response_type` as `responseType`, `content` as `content`, `title` as `title`, `picture` as `picture`, `url` as `url`, `priority` as `priority`, `need_bind` as `needBind`, `unbind_content` as `unbindContent`, `create_date` as `createDate`, `update_date` as `updateDate`, `del_flag` as `delFlag`
	    ]]>
	</sql>	

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="save" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO mp_keyword (
        `id`, `key`, `response_type`, `content`, `title`, `picture`, `url`, `priority`, `need_bind`, `unbind_content`, `create_date`, `update_date`, `del_flag`
        ) VALUES (
        #{id}, #{key}, #{responseType}, #{content}, #{title}, #{picture}, #{url}, #{priority}, #{needBind}, #{unbindContent}, #{createDate}, #{updateDate}, #{delFlag}        
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update">
    <![CDATA[
        UPDATE mp_keyword SET
	        `key` = #{key} , `response_type` = #{responseType} , `content` = #{content} , `title` = #{title} , `picture` = #{picture} , `url` = #{url} , `priority` = #{priority} , `need_bind` = #{needBind} , `unbind_content` = #{unbindContent} , `create_date` = #{createDate} , `update_date` = #{updateDate} , `del_flag` = #{delFlag}  
        WHERE 
        	id = #{id}  	        
    ]]>
	</update>

    <delete id="deleteById">
    <![CDATA[
        DELETE FROM mp_keyword WHERE
        `id` = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultType="com.slk.core.entity.mp.Keyword">
		SELECT <include refid="mp-Keyword-columns" />
	    <![CDATA[
		    FROM mp_keyword 
	        WHERE 
		        `id` = #{id} 
	    ]]>
	</select>
	
	<sql id="Keyword-where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="id">
				AND `id` = #{id}
			</if>
	       <if test="key">
				AND `key` = #{key}
			</if>
	       <if test="responseType">
				AND `response_type` = #{responseType}
			</if>
	       <if test="content">
				AND `content` = #{content}
			</if>
	       <if test="title">
				AND `title` = #{title}
			</if>
	       <if test="picture">
				AND `picture` = #{picture}
			</if>
	       <if test="url">
				AND `url` = #{url}
			</if>
	       <if test="priority">
				AND `priority` = #{priority}
			</if>
	       <if test="needBind">
				AND `need_bind` = #{needBind}
			</if>
	       <if test="unbindContent">
				AND `unbind_content` = #{unbindContent}
			</if>
	       <if test="createDateBegin != null">
				AND `create_date` >= #{createDateBegin}
		   </if>
		   <if test="createDateEnd != null">
				AND `create_date` &lt;= #{createDateEnd}
		   </if>
	       <if test="updateDateBegin != null">
				AND `update_date` >= #{updateDateBegin}
		   </if>
		   <if test="updateDateEnd != null">
				AND `update_date` &lt;= #{updateDateEnd}
		   </if>
	       <if test="delFlag">
				AND `del_flag` = #{delFlag}
			</if>
		</where>
	</sql>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM mp_keyword 
		<include refid="Keyword-where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultType="com.slk.core.entity.mp.Keyword">
		SELECT <include refid="mp-Keyword-columns" /> FROM (
			SELECT <include refid="mp-Keyword-columns" />
			FROM mp_keyword 
			<include refid="Keyword-where"/>
			
			<if test="sortColumns != null">
				ORDER BY ${sortColumns}
			</if>
		) limit #{offset}, #{pageSize}
    </select>
	
	<select id="list" resultType="com.slk.core.entity.mp.Keyword">
    	SELECT <include refid="mp-Keyword-columns" />
	    FROM mp_keyword 
		<include refid="Keyword-where"/>
		
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>

	<select id="findByKey" resultType="Keyword">
		SELECT <include refid="mp-Keyword-columns" /> FROM (
	    	SELECT *
		    FROM mp_keyword 
			WHERE `key` LIKE CONCAT('%', #{content}, '%')
			OR #{content} LIKE CONCAT('%', `key`, '%')
			ORDER BY `priority` DESC
		) a LIMIT 0, 1
    </select>
</mapper>
