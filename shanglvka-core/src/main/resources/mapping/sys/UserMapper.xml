<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.slk.core.dao.sys.UserDao">
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="sys-User-columns">
	    <![CDATA[
		`id` as `id`, `name` as `name`, `login_name` as `loginName`, `password` as `password`, `salt` as `salt`, `email` as `email`, `login_enable` as `loginEnable`, `ip_enable` as `ipEnable`, `created` as `created`, `deleted` as `deleted`, `last_operate_time` as `lastOperateTime`
	    ]]>
	</sql>	

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="save" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO sys_user (
        `id`, `name`, `login_name`, `password`, `salt`, `email`, `login_enable`, `ip_enable`, `created`, `deleted`, `last_operate_time`
        ) VALUES (
        #{id}, #{name}, #{loginName}, #{password}, #{salt}, #{email}, #{loginEnable}, #{ipEnable}, #{created}, #{deleted}, #{lastOperateTime}        
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update">
    <![CDATA[
        UPDATE sys_user SET
	        `name` = #{name} , `login_name` = #{loginName} , `password` = #{password} , `salt` = #{salt} , `email` = #{email} , `login_enable` = #{loginEnable} , `ip_enable` = #{ipEnable} , `created` = #{created} , `deleted` = #{deleted} , `last_operate_time` = #{lastOperateTime}  
        WHERE 
        	id = #{id}  	        
    ]]>
	</update>

    <delete id="deleteById">
    <![CDATA[
        DELETE FROM sys_user WHERE
        `id` = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultType="User">
		SELECT <include refid="sys-User-columns" />
	    <![CDATA[
		    FROM sys_user 
	        WHERE 
		        `id` = #{id} 
	    ]]>
	</select>
	
	<sql id="User-where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="id">
				AND `id` = #{id}
			</if>
	       <if test="name">
				AND `name` = #{name}
			</if>
	       <if test="loginName">
				AND `login_name` = #{loginName}
			</if>
	       <if test="password">
				AND `password` = #{password}
			</if>
	       <if test="salt">
				AND `salt` = #{salt}
			</if>
	       <if test="email">
				AND `email` = #{email}
			</if>
	       <if test="loginEnable">
				AND `login_enable` = #{loginEnable}
			</if>
	       <if test="ipEnable">
				AND `ip_enable` = #{ipEnable}
			</if>
	       <if test="createdBegin != null">
				AND `created` >= #{createdBegin}
		   </if>
		   <if test="createdEnd != null">
				AND `created` &lt;= #{createdEnd}
		   </if>
	       <if test="deleted">
				AND `deleted` = #{deleted}
			</if>
	       <if test="lastOperateTimeBegin != null">
				AND `last_operate_time` >= #{lastOperateTimeBegin}
		   </if>
		   <if test="lastOperateTimeEnd != null">
				AND `last_operate_time` &lt;= #{lastOperateTimeEnd}
		   </if>
		</where>
	</sql>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM sys_user 
		<include refid="User-where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultType="User">
    	SELECT <include refid="sys-User-columns" />
	    FROM sys_user 
		<include refid="User-where"/>
		
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
	<select id="list" resultType="User">
		SELECT <include refid="sys-User-columns" /> FROM (
	    	SELECT <include refid="sys-User-columns" />
		    FROM sys_user 
			<include refid="User-where"/>
			
			<if test="sortColumns != null">
				ORDER BY ${sortColumns}
			</if>
		) limit ${offset}, ${pageSize}
    </select>

    <select id="getByLoginName" resultType="User" parameterType="java.lang.String">
	    SELECT <include refid="sys-User-columns"/>
	    FROM sys_user where login_name = #{loginName}
    </select>
    
	
</mapper>

